apiVersion: "kubeadm.k8s.io/v1beta1"
kind: ClusterConfiguration
imageRepository: {{ kubernetes_imageRepository }}
useHyperKubeImage: {{ kubernetes_useHyperKubeImage }}
kubernetesVersion: {{ kubernetes_master_version }}
certificatesDir: {{ kubernetes_certs_dir }}
clusterName: {{ kubernetes_cluster_name }}
dns:
  type: {{ kubernetes_dns_type }}
etcd:
{% if inventory_hostname in groups.etcd %}
  local:
    dataDir: {{ kubernetes_etcd_data_dir }}
    serverCertSANs:
{% for san in kubernetes_etcd_server_cert_sans %}
    - {{ san }}
{% endfor %}
    peerCertSANs:
{% for san in kubernetes_etcd_peer_cert_sans %}
    - {{ san }}
{% endfor %}
{% else %}
  external:
    endpoints:
{% for n in groups.etcd %}
    - "https://{{ hostvars[n].ansible_host | default(hostvars[n]['ansible_default_ipv4.address']) }}:{{ kubernetes_etcd_client_port }}"
{% endfor %}
    caFile: {{ kubernetes_etcd_ca_cert_file }}
    certFile: {{ kubernetes_etcd_apiserver_client_cert_file }}
    keyFile: {{ kubernetes_etcd_apiserver_client_key_file }}
{% endif %}
{% if inventory_hostname in groups.k8s_masters %}
{% if kubernetes_apiserver_dns != "" %}
- "{{ kubernetes_apiserver_dns }}"
controlPlaneEndpoint: "{{ kubernetes_apiserver_dns }}:{{ kubernetes_apiserver_port}}"
{% else %}
controlPlaneEndpoint: "{{ kubernetes_apiserver_ip | default(hostvars[groups.k8s_masters[0]].ansible_host)| default(hostvars[groups.k8s_masters[0]]['ansible_default_ipv4.address']) }}:{{ kubernetes_apiserver_port}}"
{% endif %}
apiServer:
  certSANs:
  - "{{ kubernetes_apiserver_ip | default(hostvars[groups.k8s_masters[0]].ansible_host) | default(hostvars[groups.k8s_masters[0]]['ansible_default_ipv4.address']) }}"
  extraArgs:
    authorization-mode: {{ kubernetes_authorization_mode }}
    enable-admission-plugins: {{ kubernetes_enable_admission_plugins }}
    audit-log-maxage: "{{ kubernetes_log_age }}"
    audit-log-path: "{{ kubernetes_audit_log_dir }}/api-server.log"
{% if kubernetes_cloud_provider != "" %}
    cloud-provider: "{{ kubernetes_cloud_provider }}"
    cloud-config: "{{ kubernetes_cloud_config_file }}"
  extraVolumes:
  - name: cloud
    hostPath: "{{ kubernetes_cloud_config_file }}"
    mountPath: "{{ kubernetes_cloud_config_file }}"
controllerManager:
  extraArgs:
    cloud-provider: "{{ kubernetes_cloud_provider }}"
    cloud-config: "{{ kubernetes_cloud_config_file }}"
  extraVolumes:
  - name: cloud
    hostPath: "{{ kubernetes_cloud_config_file }}"
    mountPath: "{{ kubernetes_cloud_config_file }}"
{% endif %}
networking:
  dnsDomain: {{ kubernetes_dns_domain }}
  podSubnet: {{ kubernetes_pod_subnet }}
  serviceSubnet: {{ kubernetes_service_subnet }}
{% endif %}

---

apiVersion: kubeadm.k8s.io/v1beta1
kind: InitConfiguration
nodeRegistration:
  taints:
{% if inventory_hostname in groups.k8s_masters %}
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
{% elif inventory_hostname in groups.etcd %}
  - effect: NoSchedule
    key: node-role.kubernetes.io/etcd
{% endif %}
  kubeletExtraArgs:
{% if kubernetes_cloud_provider != "" %}
    cloud-provider: "{{ kubernetes_cloud_provider }}"
    cloud-config: "{{ kubernetes_cloud_config_file }}"
{% endif %}
